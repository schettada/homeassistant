- id: '1661747369154'
  alias: HA Start/Stop
  description: ''
  trigger:
  - platform: homeassistant
    event: start
    id: hastart
  - platform: homeassistant
    event: shutdown
    id: hastop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hastart
      sequence:
      - service: notify.mobile_app_sj
        data:
          message: Home Assistant Online!
          title: Critical Message
    - conditions:
      - condition: trigger
        id: hastop
      sequence:
      - service: notify.mobile_app_sj
        data:
          message: Home Assistant Rebooting!
          title: Critical Message
    default: []
  mode: single
- id: '1663217810869'
  alias: Doors & Windows Open/Close
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.front_door_sensor_contact
    - binary_sensor.garage_door_sensor_contact
    - binary_sensor.loft_window_sensor_contact
    - binary_sensor.walkout_door_sensor_contact
    - binary_sensor.basement_door_sensor_contact
    - binary_sensor.basement_window_sensor_contact
    - binary_sensor.deck_sliding_door_sensor_contact
    - binary_sensor.neeva_windows
    - binary_sensor.yard_gate_door
    to: 'on'
    id: doorwindowopen
    trigger: state
  - entity_id:
    - binary_sensor.front_door_sensor_contact
    - binary_sensor.garage_door_sensor_contact
    - binary_sensor.loft_window_sensor_contact
    - binary_sensor.walkout_door_sensor_contact
    - binary_sensor.basement_door_sensor_contact
    - binary_sensor.basement_window_sensor_contact
    - binary_sensor.deck_sliding_door_sensor_contact
    - binary_sensor.neeva_windows
    - binary_sensor.yard_gate_door
    to: 'off'
    id: doorwindowclose
    trigger: state
  conditions: []
  actions:
  - data: {}
    action: script.door_alert
  - choose:
    - conditions:
      - condition: trigger
        id: doorwindowopen
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Open'
        action: script.notify_all
    - conditions:
      - condition: trigger
        id: doorwindowclose
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Closed'
          title: Security Message
        action: script.notify_all
  mode: single
- id: '1663995445012'
  alias: Alarmo
  description: ''
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: armed_home
    id: armed_home
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: armed_night
    id: armed_night
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: armed_away
    id: armed_away
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: disarmed
    id: disarmed
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: arming
    id: arming
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: pending
    id: pending
  - platform: state
    entity_id:
    - alarm_control_panel.home
    to: triggered
    id: triggered
  - platform: event
    event_type: alarmo_failed_to_arm
    id: failed
  - platform: event
    event_type: alarmo_command_success
    id: success
  - platform: mqtt
    topic: zigbee2mqtt/keypad
    id: keypad
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: armed_home
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "arm_day_zones"     } }'
    - conditions:
      - condition: trigger
        id: armed_night
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "arm_night_zones"     } }'
    - conditions:
      - condition: trigger
        id: armed_away
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "arm_all_zones"     } }'
    - conditions:
      - condition: trigger
        id: disarmed
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "disarm"     } }'
    - conditions:
      - condition: trigger
        id: arming
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "exit_delay"     } }'
    - conditions:
      - condition: trigger
        id: pending
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "entry_delay"     } }'
    - conditions:
      - condition: trigger
        id: triggered
      sequence:
      - service: mqtt.publish
        data:
          topic: zigbee2mqtt/keypad/set
          payload: '{     "arm_mode": {         "mode": "in_alarm"     } }'
    - conditions:
      - condition: trigger
        id: failed
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.reason == ''invalid_code'' }}'
          sequence:
          - service: mqtt.publish
            data:
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id                         }},         "mode":
                "invalid_code"     } }'
              topic: zigbee2mqtt/keypad/set
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.reason == ''open_sensors'' }}'
          sequence:
          - service: mqtt.publish
            data:
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id                         }},         "mode":
                "not_ready"     } }'
              topic: zigbee2mqtt/keypad/set
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.reason == ''not_allowed'' }}'
          - condition: template
            value_template: '{{ trigger.event.data.reason == ''disarm'' }}'
          sequence:
          - service: mqtt.publish
            data:
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id                         }},         "mode":
                "already_disarmed"     } }'
              topic: zigbee2mqtt/keypad/set
    - conditions:
      - condition: trigger
        id: success
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.action == ''arm'' }}'
          - condition: template
            value_template: '{{ trigger.event.data.context_id != null }}'
          - condition: template
            value_template: '{{ trigger.event.data.mode == ''away'' }}'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/keypad/set
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id
                }},         "mode": "arm_all_zones"     } }'
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.action == ''arm'' }}'
          - condition: template
            value_template: '{{ trigger.event.data.context_id != null }}'
          - condition: template
            value_template: '{{ trigger.event.data.mode == ''home'' }}'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/keypad/set
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id
                }},         "mode": "arm_day_zones"     } }'
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.action == ''arm'' }}'
          - condition: template
            value_template: '{{ trigger.event.data.context_id != null }}'
          - condition: template
            value_template: '{{ trigger.event.data.mode == ''night'' }}'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/keypad/set
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id
                }},         "mode": "arm_night_zones"     } }'
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.action == ''disarm'' }}'
          - condition: template
            value_template: '{{ trigger.event.data.context_id != null }}'
          sequence:
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/keypad/set
              payload: '{     "arm_mode": {         "transaction": {{ trigger.event.data.context_id
                }},         "mode": "disarm"     } }'
    - conditions:
      - condition: trigger
        id: keypad
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.payload_json.action == "disarm"  }}'
          sequence:
          - service: alarmo.disarm
            data:
              entity_id: alarm_control_panel.home
              code: '{{ trigger.payload_json.action_code }}'
              context_id: '{{ trigger.payload_json.action_transaction }}'
        - conditions:
          - condition: template
            value_template: '{{ trigger.payload_json.action == "arm_all_zones"  }}'
          sequence:
          - service: alarmo.arm
            data:
              entity_id: alarm_control_panel.home
              mode: away
              code: '{{ trigger.payload_json.action_code }}'
              context_id: '{{ trigger.payload_json.action_transaction }}'
        - conditions:
          - condition: template
            value_template: '{{ trigger.payload_json.action == "arm_day_zones"  }}'
          sequence:
          - service: alarmo.arm
            data:
              entity_id: alarm_control_panel.home
              mode: home
              code: '{{ trigger.payload_json.action_code }}'
              context_id: '{{ trigger.payload_json.action_transaction }}'
        - conditions:
          - condition: template
            value_template: '{{ trigger.payload_json.action == "arm_night_zones"  }}'
          sequence:
          - service: alarmo.arm
            data:
              entity_id: alarm_control_panel.home
              mode: night
              code: '{{ trigger.payload_json.action_code }}'
              context_id: '{{ trigger.payload_json.action_transaction }}'
  mode: parallel
  max: 10
- id: '1664594503267'
  alias: Auto Arm Security
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.arleepta
    - person.sooraj_chettada
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home
      state: disarmed
    - condition: state
      entity_id: person.arleepta
      state: not_home
    - condition: state
      entity_id: person.sooraj_chettada
      state: not_home
  action:
  - service: alarmo.arm
    data:
      code: '1985'
      mode: away
      force: true
      skip_delay: true
      entity_id: alarm_control_panel.home
  - device_id: f6fb94ee1b2f598b481ded658a4af30b
    domain: lock
    entity_id: 191d58b23eef085ccf6f38511077e5cd
    type: lock
  mode: single
- id: '1677274589664'
  alias: Rack Light On/Off
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - event.rack_light_switch_button
  conditions: []
  actions:
  - data: {}
    target:
      device_id: abb44e139e83eb2414e59654c64ee273
    action: light.toggle
  mode: single
- id: '1681345612250'
  alias: Front Door Bell
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_visitor
    to: 'on'
    from: 'off'
  condition: []
  action:
  - data:
      message: Someone is at front door
    action: script.alexa_announcement
    enabled: false
  - data:
      message: Someone is at front door
    action: script.notify_phones
  - data: {}
    action: script.door_bell
  mode: single
- id: '1684639035497'
  alias: Lights On
  description: ''
  triggers:
  - event: sunset
    offset: -00:10:00
    trigger: sun
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.kitchen_light
      - light.driveway_light
      - light.porch_light
      - light.staircase_light
  mode: single
- id: '1684639231696'
  alias: Lights Off
  description: ''
  triggers:
  - at: '22:30:00'
    id: night
    trigger: time
  - at: '23:30:00'
    id: latenight
    trigger: time
  - event: sunrise
    offset: 0
    id: sunrise
    trigger: sun
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.outdoor
    - conditions:
      - condition: trigger
        id: night
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.first_floor
          - light.basement
    - conditions:
      - condition: trigger
        id:
        - latenight
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.porch_light
  mode: single
- id: '1690577897483'
  alias: Leak Sensor Notification
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.sump_pump_water_leak
    - binary_sensor.basement_drain_water_leak
    - binary_sensor.master_bathroom_water_leak
    - binary_sensor.kitchen_sink
    - binary_sensor.neeva_bathroom_water_leak
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - data:
      message: '{{ trigger.to_state.attributes.friendly_name }} detected'
      title: Critical Message
    action: script.notify_all
  mode: single
- id: '1702406910255'
  alias: Garage Status
  description: ''
  triggers:
  - entity_id:
    - cover.garage1_door
    - cover.garage2_door
    from: closed
    to: opening
    id: open
    enabled: true
    trigger: state
  - entity_id:
    - cover.garage1_door
    - cover.garage2_door
    from: open
    to: closing
    id: close
    enabled: true
    trigger: state
  - entity_id:
    - cover.garage1_door
    - cover.garage2_door
    id: longopen
    enabled: true
    to: open
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - open
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state
            }}'
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - close
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state
            }}'
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - longopen
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state
            }} for 5 mins.'
        action: script.notify_all
    enabled: true
  mode: single
- id: '1704390098395'
  alias: Check All Door Status
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - sequence:
    - if:
      - condition: state
        entity_id: binary_sensor.front_door_sensor_contact
        state: 'on'
        for:
          hours: 0
          minutes: 15
          seconds: 0
      then:
      - service: script.notify_all
        data:
          message: Front Door is Open for {{ relative_time(states.binary_sensor.front_door_sensor_contact.last_changed)
            }}
          title: Security Message
    - if:
      - condition: state
        entity_id: binary_sensor.garage_door_sensor_contact
        state: 'on'
        for:
          hours: 0
          minutes: 15
          seconds: 0
      then:
      - service: script.notify_all
        data:
          message: Garage Door is Open for {{ relative_time(states.binary_sensor.garage_door_sensor_contact.last_changed)
            }}
          title: Security Message
  mode: single
- id: '1711769380993'
  alias: Night Check
  description: ''
  triggers:
  - at: '22:30:00'
    trigger: time
  conditions: []
  actions:
  - data:
      message: There are {{expand(state_attr('light.all_lights', 'entity_id'))| selectattr('state','eq','on')|map(attribute='entity_id')|list|count}}
        light(s) On! - {{expand(state_attr('light.all_lights', 'entity_id'))| selectattr('state','eq','on')|map(attribute='name')|list}}
    action: script.notify_phones
  - data:
      message: There are {{expand(state_attr('binary_sensor.doors_windows', 'entity_id'))|
        selectattr('state','eq','on')|map(attribute='entity_id')|list|count}} door(s)/Window(s)
        Open! - {{expand(state_attr('binary_sensor.doors_windows', 'entity_id'))|
        selectattr('state','eq','on')|map(attribute='name')|list}}
    action: script.notify_phones
  - data:
      message: There are {{expand(state_attr('lock.all_doors', 'entity_id'))| selectattr('state','eq','unlocked')|map(attribute='entity_id')|list|count}}
        door(s) Unlocked! - {{expand(state_attr('lock.all_doors', 'entity_id'))| selectattr('state','eq','unlocked')|map(attribute='name')|list}}
    action: script.notify_phones
  - data:
      message: There are {{expand(state_attr('switch.all_switches', 'entity_id'))|
        selectattr('state','eq','on')|map(attribute='entity_id')|list|count}} switch(s)
        On! - {{expand(state_attr('switch.all_switches', 'entity_id'))| selectattr('state','eq','on')|map(attribute='name')|list}}
    action: script.notify_phones
  mode: single
- id: '1714447816906'
  alias: Door Lock/Unlock Status
  description: ''
  triggers:
  - device_id: f6fb94ee1b2f598b481ded658a4af30b
    domain: lock
    entity_id: 191d58b23eef085ccf6f38511077e5cd
    type: unlocked
    id: gd_unlock
    trigger: device
  - device_id: f6fb94ee1b2f598b481ded658a4af30b
    domain: lock
    entity_id: 191d58b23eef085ccf6f38511077e5cd
    type: locked
    id: gd_locked
    trigger: device
  - device_id: f6fb94ee1b2f598b481ded658a4af30b
    domain: lock
    entity_id: 191d58b23eef085ccf6f38511077e5cd
    type: jammed
    id: gd_jammed
    trigger: device
  - device_id: ffdf93c07bcdcb929e54e064d383b470
    domain: lock
    entity_id: b438392b34f145fed27c1ed5aaf709c7
    type: unlocked
    trigger: device
    id: fd_unlock
  - device_id: ffdf93c07bcdcb929e54e064d383b470
    domain: lock
    entity_id: b438392b34f145fed27c1ed5aaf709c7
    type: locked
    trigger: device
    id: fd_locked
  - device_id: ffdf93c07bcdcb929e54e064d383b470
    domain: lock
    entity_id: b438392b34f145fed27c1ed5aaf709c7
    type: jammed
    trigger: device
    id: fd_jammed
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - gd_unlock
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Unlocked'
          title: Security Message
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - gd_locked
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Locked'
          title: Security Message
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - gd_jammed
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Jammed'
          title: Security Message
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - fd_unlock
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Unlocked'
          title: Security Message
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - fd_locked
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Locked'
          title: Security Message
        action: script.notify_all
    - conditions:
      - condition: trigger
        id:
        - fd_jammed
      sequence:
      - data:
          message: '{{ trigger.to_state.attributes.friendly_name }} is Jammed'
          title: Security Message
        action: script.notify_all
  mode: single
- id: '1718425424769'
  alias: Auto Disarm Security
  description: ''
  trigger:
  - platform: zone
    entity_id: person.arleepta
    zone: zone.home
    event: enter
  - platform: zone
    entity_id: person.sooraj_chettada
    zone: zone.home
    event: enter
  condition: []
  action:
  - sequence:
    - if:
      - condition: device
        device_id: f6fb94ee1b2f598b481ded658a4af30b
        domain: lock
        entity_id: 191d58b23eef085ccf6f38511077e5cd
        type: is_locked
      then:
      - device_id: f6fb94ee1b2f598b481ded658a4af30b
        domain: lock
        entity_id: 191d58b23eef085ccf6f38511077e5cd
        type: unlock
    - if:
      - condition: state
        entity_id: alarm_control_panel.home
        state: armed_away
      then:
      - service: alarm_control_panel.alarm_disarm
        metadata: {}
        data:
          code: '1985'
        target:
          entity_id: alarm_control_panel.home
  mode: single
- id: '1721442422593'
  alias: Turn Off Automations
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.turn_off_automations
    from: 'off'
    to: 'on'
    id: turnoff
  - platform: state
    entity_id:
    - input_boolean.turn_off_automations
    from: 'on'
    to: 'off'
    id: turnon
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - turnoff
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.door_lock_unlock_status
          - automation.doors_windows_open_close
        data:
          stop_actions: true
    - conditions:
      - condition: trigger
        id:
        - turnon
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.door_lock_unlock_status
          - automation.doors_windows_open_close
        data: {}
  mode: single
- id: '1727806768707'
  alias: Power Status
  description: ''
  triggers:
  - entity_id:
    - sensor.tripp_lite_status
    from: Online
    id: poweroff
    trigger: state
  - entity_id:
    - sensor.tripp_lite_status
    id: poweron
    trigger: state
    from: On Battery Battery Discharging
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - poweroff
      sequence:
      - data:
          message: Power Is Off
        action: script.notify_phones
    - conditions:
      - condition: trigger
        id:
        - poweron
      sequence:
      - data:
          message: Power Is On
        action: script.notify_phones
  mode: single
- id: '1733801932803'
  alias: Holiday Lights
  description: ''
  triggers:
  - trigger: time
    at: '23:30:00'
    id: night
  - trigger: sun
    event: sunset
    offset: 0
    id: eve
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - eve
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.holiday_lights
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.driveway_light
          - light.porch_light
    - conditions:
      - condition: trigger
        id:
        - night
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.holiday_lights
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.driveway_light
  mode: single
- id: '1734902479753'
  alias: Basement Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.basement_door_sensor_contact
    from: 'off'
    to: 'on'
    id: open
    trigger: state
  - entity_id:
    - binary_sensor.basement_door_sensor_contact
    from: 'on'
    to: 'off'
    id: close
    trigger: state
  - entity_id:
    - binary_sensor.basement_door_sensor_contact
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: openlong
    trigger: state
  - type: not_occupied
    device_id: fce32ba62b5184c5193c55dc48226f91
    entity_id: a23bfcd660adc44e9eacd78b1e3b1831
    domain: binary_sensor
    trigger: device
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: noone
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      - condition: state
        entity_id: light.basement_stair_light
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.basement_stair_light
          - light.basement_light
    - conditions:
      - condition: trigger
        id: close
      - condition: state
        entity_id: light.basement_stair_light
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.basement_stair_light
    - conditions:
      - condition: trigger
        id: openlong
      - condition: state
        entity_id: light.basement_light
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.basement_stair_light
    - conditions:
      - condition: trigger
        id:
        - noone
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.basement_light
          - light.basement_stair_light
  mode: single
- id: '1739472330506'
  alias: Recirculation Pump Control
  description: ''
  triggers:
  - trigger: time
    at: 05:30:00
    id: start
  - trigger: time
    at: '23:30:00'
    id: end
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - start
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.master_bathroom_outlet_1
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.master_bathroom_outlet_2
    - conditions:
      - condition: trigger
        id:
        - end
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.master_bathroom_outlet_1
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.master_bathroom_outlet_2
  mode: single
- id: '1741710123085'
  alias: 'Shutdown Home Assistant '
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.apc_battery_charge
    for:
      hours: 0
      minutes: 1
      seconds: 0
    below: 25
  conditions: []
  actions:
  - action: script.notify_all
    data:
      message: Home Assistant is shutting down due to low UPS battery
      title: Critical Message
  - action: hassio.host_shutdown
    data: {}
  mode: single
